DeclareGlobalFunction( "MAJORANA_FuseEigenvectorsNoForm" );

DeclareGlobalFunction( "MAJORANA_IntersectEigenspaces" );

DeclareGlobalFunction( "MAJORANA_RemoveNullspaceNoForm" );

DeclareGlobalFunction( "MAJORANA_MainLoopNoForm" );

#! @Chapter Majorana representations with no frobenius form

#! Whilst the definition of a Majorana representation $V$ requires that the algebra
#! $V$ admits a Frobenius form that is also an inner product, it is also interesting to
#! consider algebras for which this is not true. Such an algebra is called a primitive
#! axial algebra of Monster type.
#!
#! In particular, such an algebra must be generated by
#! primitive idempotents such that the adjoint action of each of these idempotents
#! has eigenvalues $1$, $0$, $\frac{1}{4}$ and $\frac{1}{32}$ and such that these
#! eigenspaces obey the Majorana fusion law.

#! @Arguments input, index, [axioms]
#! @Returns a record giving a Majorana representation
#! @Description Performs exactly the same role as <Ref Func="MajoranaRepresentation"/>
#! except that we use an adapted version of the main algorithm that does not assume
#! the existence of a Frobenius form on the algebra.
#! @ChapterInfo Majorana representations with no frobenius form, The main function
DeclareGlobalFunction( "MajoranaRepresentationNoForm" );

DeclareGlobalFunction( "MajoranaAlgebraTestNoForm" );

#! @Arguments representation
#! @Returns nothing
#! @Description Performs exactly the same role as <Ref Func="NClosedMajoranaRepresentation"/>
#! except that we again use an adapted version of the main algorithm that does not assume
#! the existence of a Frobenius form on the algebra.
#! @ChapterInfo Majorana representations with no frobenius form, The n-closed function
DeclareGlobalFunction( "NClosedMajoranaRepresentationNoForm" );
